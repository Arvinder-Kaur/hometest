<?xml version="1.0" encoding="UTF-8" ?>
<testsuite tests="87" failures="0" name="passwordUtil.bdd.RunCucumberTest" time="0.007" errors="0" skipped="0">
  <properties>
    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
    <property name="cucumber.options" value="--tags @ChangePasswordTest"/>
    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_201\jre\bin"/>
    <property name="java.vm.version" value="25.201-b09"/>
    <property name="java.vm.vendor" value="Oracle Corporation"/>
    <property name="maven.multiModuleProjectDirectory" value="C:\Users\Arvinder\workspace\HomeTest"/>
    <property name="java.vendor.url" value="http://java.oracle.com/"/>
    <property name="path.separator" value=";"/>
    <property name="guice.disable.misplaced.annotation.check" value="true"/>
    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
    <property name="file.encoding.pkg" value="sun.io"/>
    <property name="user.script" value=""/>
    <property name="user.country" value="IN"/>
    <property name="sun.java.launcher" value="SUN_STANDARD"/>
    <property name="sun.os.patch.level" value=""/>
    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
    <property name="user.dir" value="C:\Users\Arvinder\workspace\HomeTest"/>
    <property name="java.runtime.version" value="1.8.0_201-b09"/>
    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_201\jre\lib\endorsed"/>
    <property name="os.arch" value="amd64"/>
    <property name="java.io.tmpdir" value="C:\Users\Arvinder\AppData\Local\Temp\"/>
    <property name="line.separator" value="
"/>
    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
    <property name="user.variant" value=""/>
    <property name="os.name" value="Windows 10"/>
    <property name="classworlds.conf" value="C:\apache-maven-3.6.0\bin\..\bin\m2.conf"/>
    <property name="sun.jnu.encoding" value="Cp1252"/>
    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_201\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Intel\iCLS Client\;C:\Program Files\Intel\iCLS Client\;C:\WINDOWS\system32;C:\WINDOWS;C:\WINDOWS\System32\Wbem;C:\WINDOWS\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files\Intel\Intel(R) Management Engine Components\DAL;C:\Program Files (x86)\Intel\Intel(R) Management Engine Components\IPT;C:\Program Files\Intel\Intel(R) Management Engine Components\IPT;C:\WINDOWS\System32\OpenSSH\;C:\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_201\bin;C:\Users\Arvinder\AppData\Local\Microsoft\WindowsApps;C:\Users\Arvinder\AppData\Local\GitHubDesktop\bin;."/>
    <property name="maven.conf" value="C:\apache-maven-3.6.0\bin\../conf"/>
    <property name="java.specification.name" value="Java Platform API Specification"/>
    <property name="java.class.version" value="52.0"/>
    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
    <property name="os.version" value="10.0"/>
    <property name="library.jansi.path" value="C:\apache-maven-3.6.0\bin\..\lib\jansi-native"/>
    <property name="user.home" value="C:\Users\Arvinder"/>
    <property name="user.timezone" value="Asia/Calcutta"/>
    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
    <property name="java.specification.version" value="1.8"/>
    <property name="file.encoding" value="Cp1252"/>
    <property name="user.name" value="Arvinder"/>
    <property name="java.class.path" value="C:\apache-maven-3.6.0\bin\..\boot\plexus-classworlds-2.5.2.jar"/>
    <property name="java.vm.specification.version" value="1.8"/>
    <property name="sun.arch.data.model" value="64"/>
    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_201\jre"/>
    <property name="sun.java.command" value="org.codehaus.plexus.classworlds.launcher.Launcher test -Dcucumber.options=--tags @ChangePasswordTest"/>
    <property name="java.specification.vendor" value="Oracle Corporation"/>
    <property name="user.language" value="en"/>
    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
    <property name="java.vm.info" value="mixed mode"/>
    <property name="java.version" value="1.8.0_201"/>
    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_201\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext"/>
    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_201\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_201\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_201\jre\classes"/>
    <property name="sun.stderr.encoding" value="cp437"/>
    <property name="java.vendor" value="Oracle Corporation"/>
    <property name="maven.home" value="C:\apache-maven-3.6.0\bin\.."/>
    <property name="file.separator" value="\"/>
    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
    <property name="sun.cpu.endian" value="little"/>
    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
    <property name="sun.stdout.encoding" value="cp437"/>
    <property name="sun.desktop" value="windows"/>
    <property name="sun.cpu.isalist" value="amd64"/>
  </properties>
  <testcase classname="Scenario: System Checks--&gt; Old Password does not match with system" name="When user provides OldPassword as &quot;Alphanum124@7&quot; and NewPassword as &quot;Alphanum124@9&quot;" time="0.001"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password does not match with system" name="Then result as &quot;Old Password does not match with the system&quot; should be returned" time="0"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password does not match with system" name="Scenario: System Checks--&gt; Old Password does not match with system" time="0"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password matches with system and New Password is same as current Old password" name="When user provides OldPassword as &quot;Alphanum125@9&quot; and NewPassword as &quot;Alphanum125@9&quot;" time="0"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password matches with system and New Password is same as current Old password" name="Then result as &quot;New Password is same as last 2 old passwords&quot; should be returned" time="0"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password matches with system and New Password is same as current Old password" name="Scenario: System Checks--&gt; Old Password matches with system and New Password is same as current Old password" time="0"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password matches with system and New Password is same as previous Old password" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alphanum124@8&quot;" time="0"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password matches with system and New Password is same as previous Old password" name="Then result as &quot;New Password is same as last 2 old passwords&quot; should be returned" time="0"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password matches with system and New Password is same as previous Old password" name="Scenario: System Checks--&gt; Old Password matches with system and New Password is same as previous Old password" time="0"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password matches with system and New Password is not same as current or previous Old Password" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alphanum124@7&quot;" time="0"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password matches with system and New Password is not same as current or previous Old Password" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: System Checks--&gt; Old Password matches with system and New Password is not same as current or previous Old Password" name="Scenario: System Checks--&gt; Old Password matches with system and New Password is not same as current or previous Old Password" time="0"/>
  <testcase classname="Scenario: SPassword Length and Character Checks--&gt; New Password is of length 11" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alpha123@71&quot;" time="0"/>
  <testcase classname="Scenario: SPassword Length and Character Checks--&gt; New Password is of length 11" name="Then result as &quot;New Password should contain atleast 12 alphanumeric characters&quot; should be returned" time="0"/>
  <testcase classname="Scenario: SPassword Length and Character Checks--&gt; New Password is of length 11" name="Scenario: SPassword Length and Character Checks--&gt; New Password is of length 11" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password is of length 12 and all required characters are present atleast once and starts with Upper case character" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;AlphaNum@12&amp;&quot;" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password is of length 12 and all required characters are present atleast once and starts with Upper case character" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password is of length 12 and all required characters are present atleast once and starts with Upper case character" name="Scenario: Password Length and Character Checks--&gt; New Password is of length 12 and all required characters are present atleast once and starts with Upper case character" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any upper case character" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;alphanum@12&amp;&quot;" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any upper case character" name="Then result as &quot;New Password should contain at least 1 Upper case, 1 lower case , 1 numeric, 1 special character&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any upper case character" name="Scenario: Password Length and Character Checks--&gt; New Password does not contain any upper case character" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any lower case character" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;ALPHANUM@12&amp;&quot;" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any lower case character" name="Then result as &quot;New Password should contain at least 1 Upper case, 1 lower case , 1 numeric, 1 special character&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any lower case character" name="Scenario: Password Length and Character Checks--&gt; New Password does not contain any lower case character" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any numeric character" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;AlphaNum@not&amp;&quot;" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any numeric character" name="Then result as &quot;New Password should contain at least 1 Upper case, 1 lower case , 1 numeric, 1 special character&quot; should be returned" time="0.001"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any numeric character" name="Scenario: Password Length and Character Checks--&gt; New Password does not contain any numeric character" time="0.001"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any special character" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;AlphaNum1not2&quot;" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any special character" name="Then result as &quot;New Password should contain at least 1 Upper case, 1 lower case , 1 numeric, 1 special character&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password does not contain any special character" name="Scenario: Password Length and Character Checks--&gt; New Password does not contain any special character" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains all required characters and a non allowed special character" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;AlphaNum&amp;1-22&quot;" time="0.001"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains all required characters and a non allowed special character" name="Then result as &quot;Only special characters !@#$&amp;*+&lt;=&gt; are allowed&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains all required characters and a non allowed special character" name="Scenario: Password Length and Character Checks--&gt; New Password contains all required characters and a non allowed special character" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains all required characters and a space character" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alpha Num&amp;122&quot;" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains all required characters and a space character" name="Then result as &quot;Only special characters !@#$&amp;*+&lt;=&gt; are allowed&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains all required characters and a space character" name="Scenario: Password Length and Character Checks--&gt; New Password contains all required characters and a space character" time="0.001"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains all of the allowed special characters and starts with special character" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;!@A12#$&amp;g*+&lt;=&gt;&quot;" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains all of the allowed special characters and starts with special character" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains all of the allowed special characters and starts with special character" name="Scenario: Password Length and Character Checks--&gt; New Password contains all of the allowed special characters and starts with special character" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains more than one numbers and starts with number" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;12Alpha744#$&amp;&quot;" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains more than one numbers and starts with number" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password contains more than one numbers and starts with number" name="Scenario: Password Length and Character Checks--&gt; New Password contains more than one numbers and starts with number" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password is of length more than 12, contains more than one lower case character and starts with lower case character" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;ab12Alphanum#$&amp;&quot;" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password is of length more than 12, contains more than one lower case character and starts with lower case character" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Password Length and Character Checks--&gt; New Password is of length more than 12, contains more than one lower case character and starts with lower case character" name="Scenario: Password Length and Character Checks--&gt; New Password is of length more than 12, contains more than one lower case character and starts with lower case character" time="0.001"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains 4 repeating characters" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alphannnn12@7&quot;" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains 4 repeating characters" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains 4 repeating characters" name="Scenario: Repeating Characters--&gt; New Password contains 4 repeating characters" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains 5 repeating characters" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alpha11111@7&quot;" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains 5 repeating characters" name="Then result as &quot;New Password should not contain more than 4 identical characters in a row&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains 5 repeating characters" name="Scenario: Repeating Characters--&gt; New Password contains 5 repeating characters" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains more than 5 repeating characters" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alpha1@@@@@@7&quot;" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains more than 5 repeating characters" name="Then result as &quot;New Password should not contain more than 4 identical characters in a row&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains more than 5 repeating characters" name="Scenario: Repeating Characters--&gt; New Password contains more than 5 repeating characters" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains 5 distributed repeating characters" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alpha11@1117&quot;" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains 5 distributed repeating characters" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Repeating Characters--&gt; New Password contains 5 distributed repeating characters" name="Scenario: Repeating Characters--&gt; New Password contains 5 distributed repeating characters" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 14 and a word in dictionary" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;11th&amp;12thGrade&quot;" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 14 and a word in dictionary" name="Then result as &quot;New Password should not be a dictionary word&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 14 and a word in dictionary" name="Scenario: Dictionary Checks--&gt; New Password is of length 14 and a word in dictionary" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 13 and a word in dictionary" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;9th&amp;12thGrade&quot;" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 13 and a word in dictionary" name="Then result as &quot;New Password should not be a dictionary word&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 13 and a word in dictionary" name="Scenario: Dictionary Checks--&gt; New Password is of length 13 and a word in dictionary" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 15 and a word in dictionary" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;11th&amp;12thGrades&quot;" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 15 and a word in dictionary" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 15 and a word in dictionary" name="Scenario: Dictionary Checks--&gt; New Password is of length 15 and a word in dictionary" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 14 and not a word in dictionary" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alpha11@1117&quot;" time="0.001"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 14 and not a word in dictionary" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Dictionary Checks--&gt; New Password is of length 14 and not a word in dictionary" name="Scenario: Dictionary Checks--&gt; New Password is of length 14 and not a word in dictionary" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of length 3" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alphanum123@7&quot;" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of length 3" name="Then result as &quot;New Password should not contain any number sequence&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of length 3" name="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of length 3" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of maximum length" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;A123456789@num&quot;" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of maximum length" name="Then result as &quot;New Password should not contain any number sequence&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of maximum length" name="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of maximum length" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence starting with zero" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alphanum012m@&quot;" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence starting with zero" name="Then result as &quot;New Password should not contain any number sequence&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence starting with zero" name="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence starting with zero" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains 3 or more continuous Numbers but not a Sequence" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alphanum5719m@&quot;" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains 3 or more continuous Numbers but not a Sequence" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains 3 or more continuous Numbers but not a Sequence" name="Scenario: Number Sequence--&gt; New Password contains 3 or more continuous Numbers but not a Sequence" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of length 2 and distributed Number Sequence of length 3" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alphanu12m@3&quot;" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of length 2 and distributed Number Sequence of length 3" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of length 2 and distributed Number Sequence of length 3" name="Scenario: Number Sequence--&gt; New Password contains continuous Number Sequence of length 2 and distributed Number Sequence of length 3" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password does not contain any Number Sequence of length 3 or more" name="When user provides OldPassword as &quot;Alphanum124@9&quot; and NewPassword as &quot;Alphanum01m@&quot;" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password does not contain any Number Sequence of length 3 or more" name="Then result as &quot;Password updated successfully&quot; should be returned" time="0"/>
  <testcase classname="Scenario: Number Sequence--&gt; New Password does not contain any Number Sequence of length 3 or more" name="Scenario: Number Sequence--&gt; New Password does not contain any Number Sequence of length 3 or more" time="0"/>
</testsuite>